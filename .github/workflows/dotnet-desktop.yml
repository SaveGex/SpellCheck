name: .NET API CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: ${{ secrets.MSSQL_SA_PASSWORD }}
          ACCEPT_EULA: Y
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    env:
      Solution_Name: SpellCheck.sln
      ConnectionStrings__DefaultConnection: "Server=localhost,1433;Database=TestDb;User Id=sa;Password=${{ secrets.MSSQL_SA_PASSWORD }};TrustServerCertificate=True"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET 9 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Install MSSQL tools
      run: |
        sudo ACCEPT_EULA=Y apt-get install -y curl apt-transport-https gnupg
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18 unixodbc-dev
        echo "/opt/mssql-tools18/bin" >> $GITHUB_PATH

    - name: Wait for SQL Server
      run: |
        for i in {1..30}; do
          sqlcmd -C -S localhost -U sa -P "${{ secrets.MSSQL_SA_PASSWORD }}" -Q "SELECT 1" && break
          echo "Waiting for SQL Server..."
          sleep 2
        done

    - name: Restore
      run: dotnet restore $Solution_Name

    - name: Build
      run: dotnet build $Solution_Name --configuration Release --no-restore

    - name: Install EF Core tools
      run: dotnet tool install --global dotnet-ef

    - name: Add .NET tools to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Apply EF Core migrations
      run: |
        cd DbManagerApi
        dotnet ef database update \
          --startup-project . \
          --connection "Server=localhost,1433;Database=TestDb;User Id=sa;Password=${{ secrets.MSSQL_SA_PASSWORD }};TrustServerCertificate=True"



    - name: Run tests
      run: dotnet test $Solution_Name --configuration Release --no-build --logger "trx;LogFileName=test_results.trx" --results-directory ./TestResults

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ./TestResults
